# Grott - Home Assistant Growatt sensors 
# 
# In dit yaml bestand worden alle sensoren die door Grott worden aangeboden, beschikbaar gesteld in HA, inclusief een dummy sensor om ook het type van de inverter
# in HA beschikbaar te maken (Let op, dit moet handmatig gevuld worden). 

- platform: template
  sensors:
    growatt_inverter:
      unique_id: growatt_invertertype
      friendly_name: Growatt - Type
      # Geef hier het type van je inverter in
      value_template: "MIN 4200TL-XE"
      icon_template: mdi:select-inverse

- platform: template
  sensors:
    growatt_datalogger_type:
      unique_id: growatt_datloggertype
      friendly_name: Growatt - Datalogger type
      # Geef hier het type van je datalogger in
      value_template: "ShineLink X"
      icon_template: mdi:select-inverse

- platform: template
  sensors:
    growatt_datalogger_serial:
      unique_id: growatt_datlogger_serial
      friendly_name: Growatt - Datalogger serienr
      # Geef hier het serienr van je datalogger in
      value_template: "	NAC5A16548"
      icon_template: mdi:select-inverse

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['device'] }}" 
  unique_id: growatt_serial
  name: Growatt - Serienr
  icon: mdi:select-inverse

- platform: mqtt
  state_topic: energy/growatt
  # Als je de datum in een ander formaat wil tonen, pas dan dit deel aan "timestamp_custom('%d-%m-%Y')"
  # Voor meer informatie, zie: https://docs.python.org/3/library/time.html#time.strftime
  value_template: "{{ as_timestamp(strptime(value_json['time'], '%Y-%m-%dT%H:%M:%S')) | timestamp_custom('%d-%m-%Y') }}" 
  unique_id: growatt_date
  name: Growatt - Datum
  icon: mdi:calendar

- platform: mqtt
  state_topic: energy/growatt
  # Als je de datum in een ander formaat wil tonen, pas dan dit deel aan "timestamp_custom('%H:%M:%S')"
  # Voor meer informatie, zie: https://docs.python.org/3/library/time.html#time.strftime
  value_template: "{{ as_timestamp(strptime(value_json['time'], '%Y-%m-%dT%H:%M:%S')) | timestamp_custom('%H:%M:%S') }}" 
  unique_id: growatt_time
  name: Growatt - Tijd
  icon: mdi:clock-digital

- platform: mqtt
  state_topic: energy/growatt
  value_template: >
    {% if (value_json['values']['pvstatus'] | int == 0) %}
      Wachtend
    {% elif (value_json['values']['pvstatus'] | int == 1) %}
      Normaal
    {% elif (value_json['values']['pvstatus'] | int == 2) %}
      Fout
    {% else %}
      Onbekend
    {% endif %}
  unique_id: growatt_status
  name: Growatt - Status
  icon: mdi:power-settings

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['values']['pv1watt'] | float / 10000 }}" 
  unique_id: growatt_string1_watt
  device_class: power
  unit_of_measurement: "kW"
  name: Growatt - String 1 (kiloWatt)

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['values']['pv1voltage'] | float / 10 }}" 
  unique_id: growatt_string1_voltage
  device_class: voltage
  unit_of_measurement: "V"
  name: Growatt - String 1 (Voltage)

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['values']['pv1current'] | float / 10 }}" 
  unique_id: growatt_string1_current
  device_class: current
  unit_of_measurement: "A"
  name: Growatt - String 1 (Stroom)

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['values']['pv2watt'] | float / 10000 }}" 
  unique_id: growatt_string2_watt
  device_class: power
  unit_of_measurement: "kW"
  name: Growatt - String 2 (kiloWatt)

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['values']['pv2voltage'] | float / 10 }}" 
  unique_id: growatt_string2_voltage
  device_class: voltage
  unit_of_measurement: "V"
  name: Growatt - String 2 (Voltage)

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['values']['pv2current'] | float / 10 }}" 
  unique_id: growatt_string2_current
  device_class: current
  unit_of_measurement: "A"
  name: Growatt - String 2 (Stroom)

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['values']['pvpowerin'] | float / 10000 }}" 
  unique_id: growatt_actual_input_power
  device_class: power
  unit_of_measurement: "kW"
  name: Growatt - Input wattage (Actueel)

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['values']['pvpowerout'] | float / 10000 }}" 
  unique_id: growatt_actual_output_power
  device_class: power
  unit_of_measurement: "kW"
  name: Growatt - Output wattage (Actueel)

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['values']['pvfrequentie'] | float / 100 }}" 
  unique_id: growatt_grid_frequency
  unit_of_measurement: "Hz"
  name: Growatt - Gridfrequentie
  icon: mdi:waveform

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['values']['pvgridvoltage'] | float / 10 }}" 
  unique_id: growatt_phase_voltage
  device_class: voltage
  unit_of_measurement: "V"
  name: Growatt - Fase voltage

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['values']['pvenergytoday'] | float / 10 }}" 
  unique_id: growatt_generated_energy_today
  device_class: energy
  unit_of_measurement: "kWh"
  name: Growatt - Opgewekte energie (Vandaag)
  icon: mdi:solar-power

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['values']['pvenergytotal'] | float / 10 }}" 
  unique_id: growatt_generated_energy_total
  device_class: energy
  state_class: total
  unit_of_measurement: "kWh"
  name: Growatt - Opgewekte energie (Totaal)
  icon: mdi:solar-power

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['values']['pvtemperature'] | float / 10 }}" 
  unique_id: growatt_inverer_temperature
  device_class: temperature
  unit_of_measurement: "°C"
  name: Growatt - Inverter temperatuur

# Onderstaande entiteit wordt niet door alle inverters ondersteund, dus is mogelijk niet beschikbaar.

- platform: mqtt
  state_topic: energy/growatt
  value_template: "{{ value_json['values']['pvipmtemperature'] | float / 10 }}" 
  unique_id: growatt_ipm_temperature
  device_class: temperature
  unit_of_measurement: "°C"
  name: Growatt - IPM temperatuur

